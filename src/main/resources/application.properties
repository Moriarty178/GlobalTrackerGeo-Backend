spring.application.name=GlobalTrackerGeo

# PostgreSQL Configuration
#spring.datasource.url=jdbc:postgresql://postgres:5432/globaltrackergeo
#spring.datasource.username=postgres
#spring.datasource.password=17082002
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## Hibernate Configuration
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

# Redis Configuration
#spring.redis.host=localhost
#spring.redis.port=911
spring.datasource.url=jdbc:postgresql://localhost:5432/globaltrackergeo
spring.datasource.username=postgres
spring.datasource.password=17082002
#spring.datasource.url=${SPRING_DATASOURCE_URL}
#spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
#spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#jwt.secret = your+256+bit+secret+key+that+is+long+enough
jwt.secret=Ghd73mJ2mX9sR3pQ5L8vY2cS7kE4rT9fW1xQ7hN6bZ3pD2gF4uZ
jwt.expiration = 86400000

# Provided path to get static files as: image, text, ...
spring.web.resources.static-locations=file:///D:/GlobalTrackerGeo/
# Provided path to get static files in Docker Container, === path config at volumes container 'backend' MOUNT
#spring.web.resources.static-locations=file:/app/static/
# Limit file upload size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true